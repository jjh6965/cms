{"version":3,"file":"Join-DKlfrpId.js","sources":["../../src/pages/user/Join.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport commonUtils from '../../utils/common.js';\nimport { fetchData } from '../../utils/dataUtils';\nimport api from '../../utils/api';\nimport common from '../../utils/common';\nimport { msgPopup } from '../../utils/msgPopup';\nimport { errorMsgPopup } from '../../utils/errorMsgPopup';\nimport styles from './Join.module.css';\n\nconst Join = ({ show, onHide }) => {\n  const [empNo, setEmpNo] = useState('');\n  const [empNm, setEmpNm] = useState('');\n  const [empPwd, setEmpPwd] = useState('');\n  const [confirmPwd, setConfirmPwd] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (show) {\n      setEmpNo('');\n      setEmpNm('');\n      setEmpPwd('');\n      setConfirmPwd('');\n      setMobile('');\n      setEmail('');\n    }\n  }, [show]);\n\n  const validateForm = () => {\n    if (!empNo || !empNm || !empPwd || !confirmPwd || !mobile || !email) {\n      return \"필수 입력 항목을 모두 채워주세요.\";\n    }\n\n    const empNoValidation = commonUtils.validateVarcharLength(empNo, 20, '아이디');\n    if (!empNoValidation.valid) return empNoValidation.error;\n\n    const empNmValidation = commonUtils.validateVarcharLength(empNm, 50, '이름');\n    if (!empNmValidation.valid) return empNmValidation.error;\n\n    const mobileValidation = commonUtils.validateVarcharLength(mobile, 20, '핸드폰번호');\n    if (!mobileValidation.valid) return mobileValidation.error;\n\n    const emailValidation = commonUtils.validateVarcharLength(email, 50, '이메일');\n    if (!emailValidation.valid) return emailValidation.error;\n\n    if (empPwd.length < 6) {\n      return \"비밀번호는 최소 6자 이상이어야 합니다.\";\n    }\n\n    if (empPwd !== confirmPwd) {\n      return \"비밀번호와 비밀번호 확인이 일치하지 않습니다.\";\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\n@]+\\.[^\\n@]+$/;\n    if (email && !emailRegex.test(email)) {\n      return \"유효한 이메일 형식이 아닙니다.\";\n    }\n\n    const phoneRegex = /^(\\d{2,3})-(\\d{3,4})-(\\d{3,4})$/;\n    if (mobile && !phoneRegex.test(mobile)) {\n      return \"핸드폰번호 형식이 올바르지 않습니다. (예: 010-1234-5678)\";\n    }\n\n    return '';\n  };\n\n  const handleRegistration = async (e) => {\n    e.preventDefault();\n\n    const validationError = validateForm();\n    if (validationError) {\n      errorMsgPopup(validationError);\n      return;\n    }\n\n    const userData = {\n      pGUBUN: 'I', // 프로시저의 INSERT 동작을 위해 추가\n      pEMPNO: empNo,\n      pEMPNM: empNm,\n      pEMPPWD: empPwd,\n      pPHONE: mobile, // pMOBILE과 동일한 값 사용\n      pMOBILE: mobile,\n      pEMAIL: email\n    };\n\n    try {\n      const response = await fetchData(\n        api,\n        `${common.getServerUrl('auth/join/save')}`,\n        userData\n      );\n\n      if (!response.success) {\n        throw new Error(response.errMsg || '가입정보가 잘못되었습니다.');\n      } else {\n        if (response.errMsg !== '') {\n          errorMsgPopup(response.errMsg);\n        } else {\n          msgPopup(\"가입되었습니다.\");\n          navigate('/login');\n          onHide();\n        }\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      errorMsgPopup(error.message || '가입 중 오류가 발생했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  if (!show) return null;\n\n  return (\n    <>\n      <div className={styles.overlay} onClick={onHide}></div>\n      <div className={`${styles.modal} show d-block`} tabIndex=\"-1\">\n        <div className={`${styles.modalDialog} modal-dialog-centered`}>\n          <div className={`${styles.modalContent} modal-content`}>\n            <div className={`${styles.modalHeader} modal-header`}>\n              <h5 className={`${styles.modalTitle} modal-title`}>회원가입</h5>\n              <button type=\"button\" className={`${styles.btnClose} btn-close`} onClick={onHide}></button>\n            </div>\n            <div className={`${styles.modalBody} modal-body`}>\n              <form onSubmit={handleRegistration}>\n                <div className={styles.formRow}>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"empNo\" className={styles.label}>\n                      아이디 <span className={styles.required}>*</span>\n                    </label>\n                    <div className={styles.inputWithButton}>\n                      <input\n                        type=\"text\"\n                        className={styles.input}\n                        id=\"empNo\"\n                        value={empNo}\n                        onChange={(e) => setEmpNo(e.target.value)}\n                        required\n                        placeholder=\"아이디를 입력하세요\"\n                      />\n                    </div>\n                  </div>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"empNm\" className={styles.label}>\n                      이름 <span className={styles.required}>*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      className={styles.input}\n                      id=\"empNm\"\n                      value={empNm}\n                      onChange={(e) => setEmpNm(e.target.value)}\n                      required\n                      placeholder=\"이름을 입력하세요\"\n                    />\n                  </div>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"empPwd\" className={styles.label}>\n                      비밀번호 <span className={styles.required}>*</span>\n                    </label>\n                    <input\n                      type=\"password\"\n                      className={styles.input}\n                      id=\"empPwd\"\n                      value={empPwd}\n                      onChange={(e) => setEmpPwd(e.target.value)}\n                      required\n                      placeholder=\"비밀번호를 입력하세요\"\n                    />\n                  </div>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"confirmPwd\" className={styles.label}>\n                      비밀번호 확인 <span className={styles.required}>*</span>\n                    </label>\n                    <input\n                      type=\"password\"\n                      className={styles.input}\n                      id=\"confirmPwd\"\n                      value={confirmPwd}\n                      onChange={(e) => setConfirmPwd(e.target.value)}\n                      required\n                      placeholder=\"비밀번호를 다시 입력하세요\"\n                    />\n                  </div>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"mobile\" className={styles.label}>\n                      핸드폰번호 <span className={styles.required}>*</span>\n                    </label>\n                    <input\n                      type=\"tel\"\n                      className={styles.input}\n                      id=\"mobile\"\n                      value={mobile}\n                      onChange={(e) => setMobile(e.target.value)}\n                      required\n                      placeholder=\"핸드폰번호를 입력하세요\"\n                    />\n                  </div>\n                  <div className={styles.formGroup}>\n                    <label htmlFor=\"email\" className={styles.label}>\n                      이메일 <span className={styles.required}>*</span>\n                    </label>\n                    <input\n                      type=\"email\"\n                      className={styles.input}\n                      id=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                      placeholder=\"이메일을 입력하세요\"\n                    />\n                  </div>\n                </div>\n                <div className={styles.buttonGroup}>\n                  <button type=\"submit\" className={styles.btnSubmit}>\n                    가입하기\n                  </button>\n                  <button type=\"button\" className={styles.btnCancel} onClick={onHide}>\n                    취소\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Join;"],"names":["Join","show","onHide","empNo","setEmpNo","useState","empNm","setEmpNm","empPwd","setEmpPwd","confirmPwd","setConfirmPwd","mobile","setMobile","email","setEmail","navigate","useNavigate","useEffect","validateForm","empNoValidation","commonUtils","empNmValidation","mobileValidation","emailValidation","handleRegistration","e","validationError","errorMsgPopup","userData","response","fetchData","api","common","msgPopup","error","jsxs","Fragment","jsx","styles"],"mappings":"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"}