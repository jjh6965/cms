{"version":3,"file":"LoginHistory-BnnRZv7I.js","sources":["../../src/pages/history/LoginHistory.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useStore from \"../../store/store\";\nimport { hasPermission } from \"../../utils/authUtils\";\nimport MainSearch from \"../../components/main/MainSearch\";\nimport TableSearch from \"../../components/table/TableSearch\";\nimport { createTable } from \"../../utils/tableConfig\";\nimport { initialFilters } from \"../../utils/tableEvent\";\nimport { handleDownloadExcel } from \"../../utils/tableExcel\";\nimport styles from \"../../components/table/TableSearch.module.css\";\nimport { fetchData } from \"../../utils/dataUtils\";\nimport api from \"../../utils/api\";\nimport common from \"../../utils/common\";\nimport { errorMsgPopup } from \"../../utils/errorMsgPopup\";\n\nconst LoginHistory = () => {\n  const { user } = useStore();\n  const navigate = useNavigate();\n  const [filters, setFilters] = useState({});\n  const [tableFilters, setTableFilters] = useState({}); // 기존 필터 상태 유지\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [isSearched, setIsSearched] = useState(false);\n  const [tableStatus, setTableStatus] = useState(\"initializing\");\n  const [error, setError] = useState(null);\n  const [rowCount, setRowCount] = useState(0);\n  const tableRef = useRef(null);\n  const tableInstance = useRef(null);\n  const isInitialRender = useRef(true);\n  const latestFiltersRef = useRef(filters);\n\n  const today = new Date(); // 수정: 고정된 날짜 대신 현재 날짜 사용\n  const todayMonth = `${today.getFullYear()}-${(today.getMonth() + 1).toString().padStart(2, \"0\")}`;\n\n  const searchConfig = {\n    areas: [\n      {\n        type: \"search\",\n        fields: [\n          {\n            id: \"month\",\n            type: \"select\",\n            row: 1,\n            label: \"월 선택\",\n            labelVisible: true,\n            options: [\n              { value: todayMonth, label: todayMonth }, // 현재 월(2025-06)을 첫 번째로\n              ...Array.from({ length: today.getMonth() }, (_, i) => {\n                const month = (today.getMonth() - i).toString().padStart(2, \"0\"); // 역순으로 이전 월\n                return { value: `2025-${month}`, label: `2025-${month}` };\n              }),\n              ...Array.from({ length: 12 - today.getMonth() - 1 }, (_, i) => {\n                const month = (today.getMonth() + 1 + i + 1).toString().padStart(2, \"0\"); // 이후 월\n                return { value: `2025-${month}`, label: `2025-${month}` };\n              }),\n            ].filter(\n              (item, index, self) => index === self.findIndex((t) => t.value === item.value) // 중복 제거\n            ),\n            width: \"200px\",\n            height: \"30px\",\n            backgroundColor: \"#ffffff\",\n            color: \"#000000\",\n            enabled: true,\n            defaultValue: todayMonth,\n          },\n        ],\n      },\n      // 수정: searchBtn을 buttons 영역으로 이동하여 우측 끝 배치 (UserAuthManage.jsx 참고)\n      {\n        type: \"buttons\",\n        fields: [\n          {\n            id: \"searchBtn\",\n            type: \"button\",\n            row: 1,\n            label: \"검색\",\n            eventType: \"search\",\n            width: \"80px\",\n            height: \"30px\",\n            backgroundColor: \"#00c4b4\",\n            color: \"#ffffff\",\n            enabled: true,\n            labelVisible: false,\n          },\n          // 초기화 버튼\n          // {\n          //   id: \"resetBtn\",\n          //   type: \"button\",\n          //   row: 1,\n          //   label: \"초기화\",\n          //   eventType: \"reset\",\n          //   width: \"80px\",\n          //   height: \"30px\",\n          //   backgroundColor: \"#00c4b4\",\n          //   color: \"#ffffff\",\n          //   enabled: true,\n          //   labelVisible: false,\n          // },\n        ],\n      },\n    ],\n  };\n\n  // 수정: filterTableFields를 columns에 맞게 조정\n  const filterTableFields = [\n    {\n      id: \"filterSelect\",\n      type: \"select\",\n      label: \"\",\n      options: [\n        { value: \"\", label: \"선택\" },\n        { value: \"MONTH\", label: \"월\" },\n        { value: \"DATE\", label: \"일자\" },\n        { value: \"EMPNO\", label: \"사원번호\" },\n        { value: \"EMPNM\", label: \"이름\" },\n        { value: \"USERIP\", label: \"사용자IP\" },\n        { value: \"LOGIN_STATUS\", label: \"구분(Web/Mobile)\" },\n      ],\n      width: \"default\",\n      height: \"default\",\n      backgroundColor: \"default\",\n      color: \"default\",\n      enabled: true,\n    },\n    {\n      id: \"filterText\",\n      type: \"text\",\n      label: \"\",\n      placeholder: \"찾을 내용을 입력하세요\",\n      width: \"default\",\n      height: \"default\",\n      backgroundColor: \"default\",\n      color: \"default\",\n      enabled: true,\n    },\n  ];\n\n  useEffect(() => {\n    setFilters(initialFilters(searchConfig.areas.find((area) => area.type === \"search\").fields));\n    setTableFilters(initialFilters(filterTableFields));\n  }, []);\n\n  useEffect(() => {\n    latestFiltersRef.current = filters;\n  }, [filters]);\n\n  useEffect(() => {\n    if (!user || !hasPermission(user.auth, \"loginHistory\")) navigate(\"/\");\n  }, [user, navigate]);\n\n  // columns css 정렬\n  const columns = [\n    { title: \"월\", field: \"MONTH\", width: 100, headerHozAlign: \"center\", hozAlign: \"center\" },\n    { title: \"일자\", field: \"DATE\", width: 150, headerHozAlign: \"center\", hozAlign: \"center\" },\n    { title: \"사원번호\", field: \"EMPNO\", width: 120, headerHozAlign: \"center\", hozAlign: \"center\" },\n    { title: \"이름\", field: \"EMPNM\", width: 120, headerHozAlign: \"center\", hozAlign: \"center\" },\n    { title: \"사용자IP\", field: \"USERIP\", width: 150, headerHozAlign: \"center\", hozAlign: \"center\" },\n    { title: \"구분(Web/Mobile)\",field: \"LOGIN_STATUS\",width: 150, headerHozAlign: \"center\", hozAlign: \"center\", \n      formatter: (cell) => {\n      // w를 Web, m을 Mobile로 변환\n      const value = cell.getValue();\n      // 대소문자 확인 필요\n      return value === \"W\" ? \"Web\" : value === \"M\" ? \"Mobile\" : value;\n      },\n    },\n  ];\n\n  // 수정: columns 기반 동적 필터 필드 생성\n  const dynamicFilterFields = columns.map((col) => ({\n    id: col.field,\n    label: col.title,\n    type: \"text\",\n    width: col.width,\n    enabled: true,\n  }));\n\n  const loadData = async () => {\n    setLoading(true);\n    setIsSearched(true);\n    setError(null);\n\n    const currentFilters = latestFiltersRef.current;\n\n    const params = {\n      pMDATE: currentFilters.month || todayMonth.replace(\"-\", \"\"), // YYYYMM 형식\n      pDEBUG: \"F\",\n    };\n    console.log(\"Fetching data with params:\", params);\n    console.log(\"Full API URL:\", `${common.getServerUrl(\"history/login/list\")}`);\n\n    try {\n      const response = await fetchData(api, `${common.getServerUrl(\"history/login/list\")}`, params, {\n        method: \"POST\",\n        headers: { Authorization: `Bearer ${user?.token}` },\n      });\n      console.log(\"Raw API Response:\", response);\n      if (!response.success) {\n        // 수정: errorMsgPopup 제거, 데이터 비움\n        setData([]);\n        return;\n      }\n      if (response.errMsg !== \"\") {\n        // 수정: errorMsgPopup 제거, 데이터 비움\n        setData([]);\n        return;\n      }\n      const responseData = response.data || [];\n      if (!Array.isArray(responseData)) {\n        console.error(\"응답 데이터가 배열이 아님:\", responseData);\n        setData([]);\n        return;\n      }\n      const mappedData = responseData.map((item) => {\n        if (item.vQuery) {\n          console.warn(\"Received vQuery instead of data:\", item.vQuery);\n          return {};\n        }\n        return {\n          MONTH: item.MONTH || \"\",\n          DATE: item.DATE ? item.DATE.substring(0, 10) : \"\",\n          EMPNO: item.EMPNO || \"\",\n          EMPNM: item.EMPNM || \"\",\n          USERIP: item.USERIP || \"\",\n          LOGIN_STATUS: item.USERCONGB || \"\",\n        };\n      });\n      setData(mappedData);\n      console.log(\"Mapped data:\", mappedData);\n    } catch (err) {\n      console.error(\"데이터 로드 실패:\", err);\n      // 수정: errorMsgPopup 제거, 데이터 비움\n      setData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 필터 수정: handleDynamicEvent 함수 추가\n  const handleDynamicEvent = (eventType) => {\n    if (eventType === \"search\") {\n      loadData();\n    } else if (eventType === \"reset\") {\n      setFilters(initialFilters(searchConfig.areas.find((area) => area.type === \"search\").fields));\n      setTableFilters(initialFilters(filterTableFields));\n      setData([]);\n      setIsSearched(false);\n    }\n  }; //필터 수정: 검색 및 초기화 로직 처리\n\n  useEffect(() => {\n    const initializeTable = async () => {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      if (!tableRef.current) {\n        console.warn(\"테이블 컨테이너가 준비되지 않았습니다.\");\n        return;\n      }\n      try {\n        tableInstance.current = createTable(tableRef.current, columns, [], {});\n        if (!tableInstance.current) throw new Error(\"createTable returned undefined or null\");\n        setTableStatus(\"ready\");\n      } catch (err) {\n        setTableStatus(\"error\");\n        console.error(\"테이블 초기화 실패: \", err.message);\n        setError(\"테이블 초기화 중 오류 발생: \" + err.message);\n      }\n    };\n\n    initializeTable();\n\n    return () => {\n      if (tableInstance.current) {\n        tableInstance.current.destroy();\n        tableInstance.current = null;\n        setTableStatus(\"initializing\");\n      }\n    };\n  }, []);\n\n  // 필터 기능\n  useEffect(() => {\n    if (isInitialRender.current || !tableInstance.current || tableStatus !== \"ready\" || loading) return;\n    const { filterSelect, filterText } = tableFilters;\n    if (filterText && filterSelect) {\n      tableInstance.current.setFilter(filterSelect, \"like\", filterText);\n    } else if (filterText) {\n      tableInstance.current.setFilter(\n        [\n          { field: \"MONTH\", type: \"like\", value: filterText },\n          { field: \"DATE\", type: \"like\", value: filterText },\n          { field: \"EMPNO\", type: \"like\", value: filterText },\n          { field: \"EMPNM\", type: \"like\", value: filterText },\n          { field: \"USERIP\", type: \"like\", value: filterText },\n          { field: \"LOGIN_STATUS\", type: \"like\", value: filterText },\n        ],\n        \"or\"\n      );\n    } else {\n      tableInstance.current.clearFilter();\n    }\n  }, [tableFilters.filterSelect, tableFilters.filterText, tableStatus, loading]);\n\n  //DB 없는 월 오류 alert 제거\n  useEffect(() => {\n    if (isInitialRender.current) {\n      isInitialRender.current = false;\n      return;\n    }\n    const table = tableInstance.current;\n    if (!table || tableStatus !== \"ready\" || loading) return;\n    if (table.rowManager?.renderer) {\n      table.setData(data);\n      if (isSearched && data.length === 0 && !loading) {\n        // 수정: alert 제거 및 데이터 클리어\n        table.clearData();\n      } else {\n        table.clearAlert(); // 기존 alert 제거\n        setRowCount(table.getDataCount());\n      }\n    } else {\n      console.warn(\"renderer가 아직 초기화되지 않았습니다.\");\n    }\n  }, [data, loading, tableStatus, isSearched]);\n\n  return (\n    <div className={styles.container}>\n      {error && <div>{error}</div>}\n      <MainSearch config={searchConfig} filters={filters} setFilters={setFilters} onEvent={handleDynamicEvent} />\n      <TableSearch\n        filterFields={filterTableFields} // 기존 필터 필드 유지\n        filters={tableFilters} // 기존 필터 상태 사용\n        setFilters={setTableFilters} // 기존 필터 상태 업데이트 함수 사용\n        onDownloadExcel={() => handleDownloadExcel(tableInstance.current, tableStatus, \"로그인_이력.xlsx\")}\n        rowCount={rowCount}\n        onEvent={handleDynamicEvent} // 수정: handleDynamicEvent 전달\n      />\n      <div className={styles.tableWrapper}>\n        {tableStatus === \"initializing\" && <div>초기화 중...</div>}\n        {loading && <div>로딩 중...</div>}\n        <div\n          ref={tableRef}\n          className={styles.tableSection}\n          style={{ visibility: loading || tableStatus !== \"ready\" ? \"hidden\" : \"visible\" }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default LoginHistory;\n"],"names":["LoginHistory","user","useStore","navigate","useNavigate","filters","setFilters","useState","tableFilters","setTableFilters","loading","setLoading","data","setData","isSearched","setIsSearched","tableStatus","setTableStatus","error","setError","rowCount","setRowCount","tableRef","useRef","tableInstance","isInitialRender","latestFiltersRef","today","todayMonth","searchConfig","_","i","month","item","index","self","t","filterTableFields","useEffect","initialFilters","area","hasPermission","columns","cell","value","col","loadData","params","common","response","fetchData","api","responseData","mappedData","err","handleDynamicEvent","eventType","resolve","createTable","filterSelect","filterText","table","_a","jsxs","styles","jsx","MainSearch","TableSearch","handleDownloadExcel"],"mappings":"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"}