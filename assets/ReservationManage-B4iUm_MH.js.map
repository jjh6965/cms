{"version":3,"file":"ReservationManage-B4iUm_MH.js","sources":["../../src/pages/reservation/ReservationManage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useStore from \"../../store/store\";\nimport { hasPermission } from \"../../utils/authUtils\";\nimport MainSearch from \"../../components/main/MainSearch\";\nimport TableSearch from \"../../components/table/TableSearch\";\nimport { createTable } from \"../../utils/tableConfig\";\nimport { initialFilters } from \"../../utils/tableEvent\";\nimport { handleDownloadExcel } from \"../../utils/tableExcel\";\nimport styles from \"../../components/table/TableSearch.module.css\";\nimport CommonPopup from \"../../components/popup/CommonPopup\";\nimport { fetchData } from \"../../utils/dataUtils\";\nimport api from \"../../utils/api\";\nimport common from \"../../utils/common\";\nimport { errorMsgPopup } from \"../../utils/errorMsgPopup\";\nimport { msgPopup } from \"../../utils/msgPopup\";\n\n// 검색 필드 옵션 정의\nconst getFieldOptions = (fieldId) => {\n  const optionsMap = {\n    STATUS: [\n      { value: \"\", label: \"전체\" },\n      { value: \"사용 중\", label: \"사용 중\" },\n      { value: \"예약 가능\", label: \"예약 가능\" },\n      { value: \"예약 완료\", label: \"예약 완료\" },\n    ],\n    GENDER: [\n      { value: \"Male\", label: \"남성\" },\n      { value: \"Female\", label: \"여성\" },\n    ],\n    DURATION: [\n      { value: 1, label: \"1개월\" },\n      { value: 6, label: \"6개월\" },\n      { value: 12, label: \"12개월\" },\n    ],\n    ROOM_TYPE: [\n      { value: \"1인실\", label: \"1인실\" }, // CSV 기반 초기값, 동적 로드 필요\n    ],\n  };\n  return optionsMap[fieldId] || [];\n};\n\n// 동적 옵션 로드 함수\nconst fetchFieldOptions = async (fieldId, endpoint, user) => {\n  try {\n    const params = {\n      p_NAME: \"\",\n      p_STATUS: \"\",\n      p_FLOOR_ID: \"\",\n      p_SECTION: \"\",\n      p_DEBUG: \"F\",\n    };\n    console.log(\"Params before fetchData in fetchFieldOptions:\", params);\n    const response = await fetchData(api, endpoint, params);\n    console.log(\"Response from fetchData in fetchFieldOptions:\", response);\n    if (!response.success || response.errCd !== \"00\") {\n      throw new Error(response.errMsg || `Failed to load ${fieldId} options`);\n    }\n    return Array.isArray(response.data)\n      ? response.data.map((item) => ({ value: item[fieldId] || item, label: item[fieldId] || item }))\n      : [];\n  } catch (err) {\n    console.error(`Failed to load ${fieldId} options:`, err);\n    errorMsgPopup(`Failed to load ${fieldId} options: ${err.message}`);\n    return [];\n  }\n};\n\n// 검색 설정\nconst searchConfig = {\n  areas: [\n    {\n      type: \"search\",\n      fields: [\n        {\n          id: \"NAME\",\n          type: \"text\",\n          row: 1,\n          label: \"예약자 이름\",\n          labelVisible: true,\n          placeholder: \"예약자 이름 입력\",\n          width: \"200px\",\n          height: \"30px\",\n          backgroundColor: \"#ffffff\",\n          color: \"#000000\",\n          enabled: true,\n        },\n        {\n          id: \"STATUS\",\n          type: \"select\",\n          row: 1,\n          label: \"상태\",\n          labelVisible: true,\n          options: [\n            { value: \"\", label: \"전체\" },\n            { value: \"사용 중\", label: \"사용 중\" },\n            { value: \"예약 가능\", label: \"예약 가능\" },\n            { value: \"취소\", label: \"취소\" },\n          ],\n          width: \"150px\",\n          height: \"30px\",\n          backgroundColor: \"#ffffff\",\n          color: \"#000000\",\n          enabled: true,\n        },\n        {\n          id: \"FLOOR_ID\",\n          type: \"text\",\n          row: 2,\n          label: \"층 ID\",\n          labelVisible: true,\n          placeholder: \"층 ID 입력 (예: 1F)\",\n          width: \"150px\",\n          height: \"30px\",\n          backgroundColor: \"#ffffff\",\n          color: \"#000000\",\n          enabled: true,\n        },\n        {\n          id: \"SECTION\",\n          type: \"select\",\n          row: 2,\n          label: \"섹션\",\n          labelVisible: true,\n          options: [\n            { value: \"\", label: \"전체\" },\n            { value: \"A\", label: \"A\" },\n            { value: \"B\", label: \"B\" },\n            { value: \"C\", label: \"C\" },\n          ],\n          width: \"150px\",\n          height: \"30px\",\n          backgroundColor: \"#ffffff\",\n          color: \"#000000\",\n          enabled: true,\n        },\n      ],\n    },\n    {\n      type: \"buttons\",\n      fields: [\n        {\n          id: \"searchBtn\",\n          type: \"button\",\n          row: 1,\n          label: \"검색\",\n          eventType: \"search\",\n          width: \"80px\",\n          height: \"30px\",\n          backgroundColor: \"#00c4b4\",\n          color: \"#ffffff\",\n          enabled: true,\n        },\n      ],\n    },\n  ],\n};\n\n// 테이블 필터 필드 설정\nconst filterTableFields = [\n  {\n    id: \"filterSelect\",\n    label: \"\",\n    type: \"select\",\n    options: [\n      { value: \"\", label: \"선택\" },\n      { value: \"RESERVATION_ID\", label: \"예약 ID\" },\n      { value: \"ROOM_ID\", label: \"호실 ID\" },\n      { value: \"USER_ID\", label: \"사용자 ID\" },\n      { value: \"ROOM_TYPE\", label: \"호실 유형\" },\n      { value: \"NAME\", label: \"예약자 이름\" },\n      { value: \"GENDER\", label: \"성별\" },\n      { value: \"PHONE\", label: \"전화번호\" },\n      { value: \"RESERVATION_DATE\", label: \"예약 날짜\" },\n      { value: \"DURATION\", label: \"기간(개월)\" },\n      { value: \"STATUS\", label: \"상태\" },\n      { value: \"EMP_NO\", label: \"직원 번호\" },\n    ],\n    width: \"auto\",\n  },\n  {\n    id: \"filterText\",\n    label: \"\",\n    type: \"text\",\n    placeholder: \"검색값을 입력하세요\",\n    width: \"200px\",\n  },\n];\n\nconst ReservationManage = () => {\n  const { user } = useStore();\n  const navigate = useNavigate();\n  const tableRef = useRef(null);\n  const tableInstance = useRef(null);\n  const isInitialRender = useRef(true);\n\n  const [filters, setFilters] = useState(initialFilters(searchConfig.areas.find((area) => area.type === \"search\").fields));\n  const [tableFilters, setTableFilters] = useState(initialFilters(filterTableFields));\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [tableStatus, setTableStatus] = useState(\"initializing\");\n  const [showAddPopup, setShowAddPopup] = useState(false);\n  const [newRowData, setNewRowData] = useState({\n    RESERVATION_ID: \"\",\n    ROOM_ID: \"\",\n    USER_ID: user?.id || \"admin\",\n    ROOM_TYPE: \"1인실\",\n    NAME: \"\",\n    GENDER: \"Male\",\n    PHONE: \"\",\n    RESERVATION_DATE: new Date().toISOString().split(\"T\")[0],\n    DURATION: 1,\n    STATUS: \"\",\n    EMP_NO: user?.emp_no || \"admin\",\n  });\n  const [rowCount, setRowCount] = useState(0);\n  const [isSearched, setIsSearched] = useState(false);\n  const [roomTypeOptions, setRoomTypeOptions] = useState(getFieldOptions(\"ROOM_TYPE\"));\n\n  // 테이블 셀 편집기 설정\n  const fn_CellText = { editor: \"input\", editable: true };\n  const fn_CellNumber = { editor: \"number\", editorParams: { min: 0 }, editable: true };\n  const fn_CellSelect = (values) => ({ editor: \"list\", editorParams: { values, autocomplete: true }, editable: true });\n  const fn_CellButton = (label, className, onClick) => ({\n    formatter: (cell) => {\n      const button = document.createElement(\"button\");\n      button.className = `btn btn-sm ${className}`;\n      button.innerText = label;\n      button.onclick = () => onClick(cell.getData());\n      return button;\n    },\n  });\n\n  // 셀 편집 처리 함수\n  const fn_HandleCellEdit = (cell, field) => {\n    const rowId = cell.getRow().getData().RESERVATION_ID;\n    const newValue = cell.getValue();\n    setTimeout(() => {\n      setData((prevData) =>\n        prevData.map((row) => {\n          if (String(row.RESERVATION_ID) === String(rowId)) {\n            const updatedRow = { ...row, [field]: newValue };\n            if (updatedRow.is_deleted === \"N\" && updatedRow.is_added === \"N\") {\n              updatedRow.is_changed = \"Y\";\n            }\n            return updatedRow;\n          }\n          return row;\n        })\n      );\n      if (tableInstance.current) tableInstance.current.redraw();\n    }, 0);\n  };\n\n  // 호실 삭제 처리 함수\n  const handleDelete = (rowData) => {\n    if (!rowData || !rowData.RESERVATION_ID) {\n      errorMsgPopup(\"삭제할 데이터가 없습니다.\");\n      return;\n    }\n    if (rowData.STATUS === \"사용 중\") {\n      errorMsgPopup(\"사용 중인 예약은 삭제할 수 없습니다.\");\n      return;\n    }\n    const table = tableInstance.current;\n    if (table) {\n      const row = table.getRows().find((r) => r.getData().RESERVATION_ID === rowData.RESERVATION_ID);\n      if (row) {\n        row.select();\n      }\n    }\n    setTimeout(() => {\n      if (rowData.is_added === \"Y\") {\n        setData((prevData) => prevData.filter((r) => r.RESERVATION_ID !== rowData.RESERVATION_ID));\n      } else {\n        setData((prevData) =>\n          prevData.map((r) => (r.RESERVATION_ID === rowData.RESERVATION_ID ? { ...r, is_deleted: \"Y\", is_changed: \"N\" } : r))\n        );\n      }\n      if (tableInstance.current) tableInstance.current.redraw();\n    }, 0);\n  };\n\n  // 권한 체크\n  useEffect(() => {\n    if (!user || !hasPermission(user.auth, \"reservationManage\")) {\n      console.log(\"Redirecting due to missing user or reservationManage permission\");\n      navigate(\"/\");\n    }\n  }, [user, navigate]);\n\n  // 동적 옵션 로드\n  useEffect(() => {\n    const loadOptions = async () => {\n      setLoading(true);\n      try {\n        const roomTypes = await fetchFieldOptions(\"ROOM_TYPE\", `${common.getServerUrl(\"reservation/reservation/list\")}`, user);\n        setRoomTypeOptions(roomTypes.length > 0 ? roomTypes : getFieldOptions(\"ROOM_TYPE\"));\n      } catch (err) {\n        console.error(\"Failed to load room types:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadOptions();\n  }, [user]);\n\n  // 테이블 초기화\n  useEffect(() => {\n    const initializeTable = async () => {\n      if (!tableRef.current) {\n        errorMsgPopup(\"테이블 컨테이너를 초기화할 수 없습니다.\");\n        return;\n      }\n      try {\n        tableInstance.current = createTable(\n          tableRef.current,\n          [\n            {\n              frozen: true,\n              headerHozAlign: \"center\",\n              hozAlign: \"center\",\n              title: \"작업\",\n              field: \"actions\",\n              width: 80,\n              visible: true,\n              ...fn_CellButton(\"삭제\", `btn-danger ${styles.deleteButton}`, handleDelete),\n            },\n            {\n              frozen: true,\n              headerHozAlign: \"center\",\n              hozAlign: \"center\",\n              title: \"작업대상\",\n              field: \"applyTarget\",\n              sorter: \"string\",\n              width: 100,\n              formatter: (cell) => {\n                const rowData = cell.getRow().getData();\n                let label = \"\";\n                let stateField = \"\";\n                if (rowData.is_deleted === \"Y\") {\n                  label = \"삭제\";\n                  stateField = \"is_deleted\";\n                } else if (rowData.is_added === \"Y\") {\n                  label = \"추가\";\n                  stateField = \"is_added\";\n                } else if (rowData.is_changed === \"Y\") {\n                  label = \"변경\";\n                  stateField = \"is_changed\";\n                }\n                if (!label) return \"\";\n                const div = document.createElement(\"div\");\n                div.style.display = \"flex\";\n                div.style.alignItems = \"center\";\n                div.style.justifyContent = \"center\";\n                div.style.gap = \"5px\";\n                const checkbox = document.createElement(\"input\");\n                checkbox.type = \"checkbox\";\n                checkbox.checked = rowData[stateField] === \"Y\";\n                checkbox.onclick = () => {\n                  setTimeout(() => {\n                    setData((prevData) =>\n                      prevData\n                        .map((row) => {\n                          if (row.RESERVATION_ID === rowData.RESERVATION_ID) {\n                            const updatedRow = { ...row, [stateField]: checkbox.checked ? \"Y\" : \"N\" };\n                            if (stateField === \"is_deleted\" && !checkbox.checked) updatedRow.is_changed = \"N\";\n                            if (stateField === \"is_added\" && !checkbox.checked) return null;\n                            return updatedRow;\n                          }\n                          return row;\n                        })\n                        .filter(Boolean)\n                    );\n                    if (tableInstance.current) tableInstance.current.redraw();\n                  }, 0);\n                };\n                const span = document.createElement(\"span\");\n                span.innerText = label;\n                div.appendChild(checkbox);\n                div.appendChild(span);\n                return div;\n              },\n            },\n            {\n              headerHozAlign: \"center\",\n              hozAlign: \"center\",\n              title: \"예약 ID\",\n              field: \"RESERVATION_ID\",\n              sorter: \"string\",\n              width: 120,\n              editable: false,\n            },\n            {\n              headerHozAlign: \"center\",\n              hozAlign: \"left\",\n              title: \"호실 ID\",\n              field: \"ROOM_ID\",\n              sorter: \"string\",\n              width: 100,\n              editor: \"input\",\n              editable: true,\n              cellEdited: (cell) => fn_HandleCellEdit(cell, \"ROOM_ID\"),\n            },\n            {\n              headerHozAlign: \"center\",\n              hozAlign: \"left\",\n              title: \"호실 유형\",\n              field: \"ROOM_TYPE\",\n              sorter: \"string\",\n              width: 100,\n              editor: \"list\",\n              editorParams: { values: roomTypeOptions.map((opt) => opt.value) },\n              editable: true,\n              cellEdited: (cell) => fn_HandleCellEdit(cell, \"ROOM_TYPE\"),\n            },\n            {\n              headerHozAlign: \"center\",\n              hozAlign: \"left\",\n              title: \"예약자 이름\",\n              field: \"NAME\",\n              sorter: \"string\",\n              width: 120,\n              editor: \"input\",\n              editable: true,\n              cellEdited: (cell) => fn_HandleCellEdit(cell, \"NAME\"),\n            },\n            {\n              headerHozAlign: \"center\",\n              hozAlign: \"center\",\n              title: \"성별\",\n              field: \"GENDER\",\n              sorter: \"string\",\n              width: 80,\n              editor: \"list\",\n              editorParams: { values: getFieldOptions(\"GENDER\").map((opt) => opt.value) },\n              editable: true,\n              cellEdited: (cell) => fn_HandleCellEdit(cell, \"GENDER\"),\n            },\n            {\n              headerHozAlign: \"center\",\n              hozAlign: \"left\",\n              title: \"전화번호\",\n              field: \"PHONE\",\n              sorter: \"string\",\n              width: 120,\n              editor: \"input\",\n              editable: true,\n              cellEdited: (cell) => fn_HandleCellEdit(cell, \"PHONE\"),\n            },\n            {\n              headerHozAlign: \"center\",\n              hozAlign: \"center\",\n              title: \"예약 날짜\",\n              field: \"RESERVATION_DATE\",\n              sorter: \"string\",\n              width: 120,\n              editor: \"input\",\n              editorParams: { type: \"date\" },\n              editable: true,\n              cellEdited: (cell) => fn_HandleCellEdit(cell, \"RESERVATION_DATE\"),\n            },\n            {\n              headerHozAlign: \"center\",\n              hozAlign: \"center\",\n              title: \"기간(개월)\",\n              field: \"DURATION\",\n              sorter: \"number\",\n              width: 100,\n              editor: \"list\",\n              editorParams: { values: getFieldOptions(\"DURATION\").map((opt) => opt.value) },\n              editable: true,\n              cellEdited: (cell) => fn_HandleCellEdit(cell, \"DURATION\"),\n            },\n            {\n              headerHozAlign: \"center\",\n              hozAlign: \"center\",\n              title: \"상태\",\n              field: \"STATUS\",\n              sorter: \"string\",\n              width: 100,\n              editor: \"list\",\n              editorParams: { values: getFieldOptions(\"STATUS\").map((opt) => opt.value) },\n              editable: true,\n              cellEdited: (cell) => fn_HandleCellEdit(cell, \"STATUS\"),\n            },\n            {\n              headerHozAlign: \"center\",\n              hozAlign: \"center\",\n              title: \"직원 번호\",\n              field: \"EMP_NO\",\n              sorter: \"string\",\n              width: 100,\n              editor: \"input\",\n              editable: true,\n              cellEdited: (cell) => fn_HandleCellEdit(cell, \"EMP_NO\"),\n            },\n            {\n              headerHozAlign: \"center\",\n              hozAlign: \"center\",\n              title: \"생성일시\",\n              field: \"CREATED_AT\",\n              sorter: \"string\",\n              width: 150,\n              editable: false,\n            },\n            {\n              headerHozAlign: \"center\",\n              hozAlign: \"center\",\n              title: \"수정일시\",\n              field: \"UPDATED_AT\",\n              sorter: \"string\",\n              width: 150,\n              editable: false,\n            },\n          ],\n          [],\n          {\n            editable: true,\n            rowFormatter: (row) => {\n              const data = row.getData();\n              const el = row.getElement();\n              el.classList.remove(styles.deletedRow, styles.addedRow, styles.editedRow);\n              if (data.is_deleted === \"Y\") el.classList.add(styles.deletedRow);\n              else if (data.is_added === \"Y\") el.classList.add(styles.addedRow);\n              else if (data.is_changed === \"Y\") el.classList.add(styles.editedRow);\n            },\n          }\n        );\n        setTableStatus(\"ready\");\n      } catch (err) {\n        setTableStatus(\"error\");\n        errorMsgPopup(\"테이블 초기화에 실패했습니다: \" + err.message);\n      }\n    };\n    initializeTable();\n    return () => {\n      if (tableInstance.current) {\n        tableInstance.current.destroy();\n        tableInstance.current = null;\n        setTableStatus(\"initializing\");\n      }\n    };\n  }, []);\n\n  // 데이터 로드\n  const handleSearch = async () => {\n    setLoading(true);\n    setIsSearched(true);\n    try {\n      const params = {\n        p_NAME: filters.NAME || \"\",\n        p_STATUS: filters.STATUS || \"\",\n        p_FLOOR_ID: filters.FLOOR_ID || \"\",\n        p_SECTION: filters.SECTION || \"\",\n        p_DEBUG: \"F\",\n      };\n      console.log(\"Search params:\", params);\n      const response = await fetchData(api, `${common.getServerUrl(\"reservation/reservation/list\")}`, params);\n      console.log(\"Search response:\", response);\n      if (!response.success) {\n        errorMsgPopup(response.message || \"예약 데이터를 가져오는 중 오류가 발생했습니다.\");\n        setData([]);\n        return;\n      }\n      if (response.errMsg && response.errCd !== \"00\") {\n        errorMsgPopup(response.errMsg);\n        setData([]);\n        return;\n      }\n      const responseData = Array.isArray(response.data)\n        ? response.data.map((row) => ({ ...row, is_changed: \"N\", is_added: \"N\", is_deleted: \"N\" }))\n        : [];\n      setData(responseData);\n    } catch (err) {\n      errorMsgPopup(err.response?.data?.message || \"예약 데이터를 가져오는 중 오류가 발생했습니다.\");\n      setData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 테이블 데이터 업데이트\n  useEffect(() => {\n    if (isInitialRender.current) {\n      isInitialRender.current = false;\n      return;\n    }\n    const table = tableInstance.current;\n    if (!table || tableStatus !== \"ready\" || loading) return;\n    table.setData(data);\n    if (isSearched && data.length === 0 && !loading) {\n      table.alert(\"검색 결과 없음\", \"info\");\n    } else {\n      table.clearAlert();\n      setRowCount(table.getDataCount());\n    }\n  }, [data, tableStatus, loading, isSearched]);\n\n  // 테이블 필터 적용\n  useEffect(() => {\n    if (!tableInstance.current || tableStatus !== \"ready\" || loading) return;\n    const { filterSelect, filterText } = tableFilters;\n    if (filterText && filterSelect) {\n      tableInstance.current.setFilter(filterSelect, \"like\", filterText);\n    } else if (filterText) {\n      if (filterText !== \"\") {\n        tableInstance.current.setFilter(\n          [\n            { field: \"RESERVATION_ID\", type: \"like\", value: filterText },\n            { field: \"ROOM_ID\", type: \"like\", value: filterText },\n            { field: \"USER_ID\", type: \"like\", value: filterText },\n            { field: \"ROOM_TYPE\", type: \"like\", value: filterText },\n            { field: \"NAME\", type: \"like\", value: filterText },\n            { field: \"GENDER\", type: \"like\", value: filterText },\n            { field: \"PHONE\", type: \"like\", value: filterText },\n            { field: \"RESERVATION_DATE\", type: \"like\", value: filterText },\n            { field: \"DURATION\", type: \"like\", value: filterText },\n            { field: \"STATUS\", type: \"like\", value: filterText },\n            { field: \"EMP_NO\", type: \"like\", value: filterText },\n          ],\n          \"or\"\n        );\n      } else {\n        tableInstance.current.clearFilter();\n      }\n    } else {\n      tableInstance.current.clearFilter();\n    }\n  }, [tableFilters, tableStatus, loading]);\n\n  // 검색 이벤트 처리\n  const handleDynamicEvent = (eventType) => {\n    if (eventType === \"search\") handleSearch();\n  };\n\n  // 예약 추가 팝업 열기\n  const handleAddClick = () => setShowAddPopup(true);\n\n  // 예약 추가 확인\n  const handleAddConfirm = () => {\n    if (!newRowData.ROOM_ID || !newRowData.NAME) {\n      errorMsgPopup(\"호실 ID와 예약자 이름은 필수 입력 항목입니다.\");\n      return;\n    }\n    const newRow = {\n      RESERVATION_ID: `TEMP_${Date.now()}`,\n      ...newRowData,\n      CREATED_AT: new Date().toISOString().slice(0, 19).replace(\"T\", \" \"),\n      UPDATED_AT: new Date().toISOString().slice(0, 19).replace(\"T\", \" \"),\n      is_deleted: \"N\",\n      is_changed: \"N\",\n      is_added: \"Y\",\n    };\n    setData((prevData) => [newRow, ...prevData]);\n    setShowAddPopup(false);\n    setNewRowData({\n      RESERVATION_ID: \"\",\n      ROOM_ID: \"\",\n      USER_ID: user?.id || \"admin\",\n      ROOM_TYPE: \"1인실\",\n      NAME: \"\",\n      GENDER: \"Male\",\n      PHONE: \"\",\n      RESERVATION_DATE: new Date().toISOString().split(\"T\")[0],\n      DURATION: 1,\n      STATUS: \"\",\n      EMP_NO: user?.emp_no || \"admin\",\n    });\n    if (tableInstance.current) tableInstance.current.redraw();\n  };\n\n  // 예약 추가 취소\n  const handleAddCancel = () => {\n    setShowAddPopup(false);\n    setNewRowData({\n      RESERVATION_ID: \"\",\n      ROOM_ID: \"\",\n      USER_ID: user?.id || \"admin\",\n      ROOM_TYPE: \"1인실\",\n      NAME: \"\",\n      GENDER: \"Male\",\n      PHONE: \"\",\n      RESERVATION_DATE: new Date().toISOString().split(\"T\")[0],\n      DURATION: 1,\n      STATUS: \"\",\n      EMP_NO: user?.emp_no || \"admin\",\n    });\n  };\n\n  // 저장 처리\n  const handleSave = async () => {\n    const changedRows = data.filter((row) => row.is_deleted === \"Y\" || row.is_added === \"Y\" || row.is_changed === \"Y\");\n    if (changedRows.length === 0) {\n      errorMsgPopup(\"변경된 데이터가 없습니다.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const promises = changedRows.map(async (row) => {\n        const PGUBUN = row.is_deleted === \"Y\" ? \"D\" : row.is_added === \"Y\" ? \"I\" : \"U\";\n        const params = {\n          PGUBUN: PGUBUN,\n          PRESERVATION_ID: row.RESERVATION_ID,\n          PROOM_ID: row.ROOM_ID || \"\",\n          PUSER_ID: row.USER_ID || \"admin\",\n          PROOM_TYPE: row.ROOM_TYPE || \"1인실\",\n          PNAME: row.NAME || \"\",\n          PGENDER: row.GENDER || \"Male\",\n          PPHONE: row.PHONE || \"\",\n          PRESERVATION_DATE: row.RESERVATION_DATE || new Date().toISOString().split(\"T\")[0],\n          PDURATION: row.DURATION || 1,\n          PSTATUS: row.STATUS || \"\",\n          PEMP_NO: row.EMP_NO || user?.emp_no || \"admin\",\n          P_DEBUG: \"F\",\n        };\n        try {\n          const response = await fetchData(api, `${common.getServerUrl(\"reservation/reservation/save\")}`, params);\n          if (!response.success || response.errCd !== \"00\") {\n            throw new Error(response.errMsg || `Failed to process reservation ${row.RESERVATION_ID}`);\n          }\n          return { ...row, success: true, message: response.errMsg || \"성공\" };\n        } catch (error) {\n          console.error(`Error processing ${PGUBUN} for RESERVATION_ID: ${row.RESERVATION_ID}`, error);\n          return { ...row, success: false, error: error.message };\n        }\n      });\n      const results = await Promise.all(promises);\n      const errors = results.filter((result) => !result.success);\n      if (errors.length > 0) {\n        errorMsgPopup(`일부 작업이 실패했습니다: ${errors.map((e) => e.error).join(\", \")}`);\n      } else {\n        msgPopup(\"모든 변경사항이 성공적으로 저장되었습니다.\");\n        setData((prevData) => prevData.map((row) => ({ ...row, is_changed: \"N\", is_added: \"N\", is_deleted: \"N\" })));\n        await handleSearch();\n      }\n    } catch (err) {\n      errorMsgPopup(err.message || \"저장 중 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <MainSearch config={searchConfig} filters={filters} setFilters={setFilters} onEvent={handleDynamicEvent} />\n      <TableSearch\n        filterFields={filterTableFields}\n        filters={tableFilters}\n        setFilters={setTableFilters}\n        rowCount={rowCount}\n        onDownloadExcel={() => handleDownloadExcel(tableInstance.current, tableStatus, \"예약관리.xlsx\")}\n        buttonStyles={styles}\n      >\n        <div className={styles.btnGroupCustom}>\n          <button className={`${styles.btn} text-bg-primary`} onClick={handleAddClick}>\n            추가\n          </button>\n          <button className={`${styles.btn} text-bg-success`} onClick={handleSave}>\n            저장\n          </button>\n        </div>\n      </TableSearch>\n      <div className={styles.tableWrapper}>\n        {tableStatus === \"initializing\" && <div>초기화 중...</div>}\n        {loading && <div>로딩 중...</div>}\n        <div\n          ref={tableRef}\n          className={styles.tableSection}\n          style={{ visibility: loading || tableStatus !== \"ready\" ? \"hidden\" : \"visible\" }}\n        />\n      </div>\n      <CommonPopup show={showAddPopup} onHide={handleAddCancel} onConfirm={handleAddConfirm} title=\"예약 추가\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">예약 ID</label>\n          <input\n            type=\"text\"\n            className={`form-control ${styles.formControl}`}\n            placeholder=\"예약 ID 입력\"\n            value={newRowData.RESERVATION_ID}\n            onChange={(e) => setNewRowData({ ...newRowData, RESERVATION_ID: e.target.value })}\n            disabled\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">호실 ID</label>\n          <input\n            type=\"text\"\n            className={`form-control ${styles.formControl}`}\n            placeholder=\"호실 ID 입력\"\n            value={newRowData.ROOM_ID}\n            onChange={(e) => setNewRowData({ ...newRowData, ROOM_ID: e.target.value })}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">호실 유형</label>\n          <select\n            className={`form-select ${styles.formSelect}`}\n            value={newRowData.ROOM_TYPE}\n            onChange={(e) => setNewRowData({ ...newRowData, ROOM_TYPE: e.target.value })}\n          >\n            <option value=\"\">선택하세요</option>\n            {roomTypeOptions.map((opt) => (\n              <option key={opt.value} value={opt.value}>\n                {opt.label}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">예약자 이름</label>\n          <input\n            type=\"text\"\n            className={`form-control ${styles.formControl}`}\n            placeholder=\"예약자 이름 입력\"\n            value={newRowData.NAME}\n            onChange={(e) => setNewRowData({ ...newRowData, NAME: e.target.value })}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">성별</label>\n          <select\n            className={`form-select ${styles.formSelect}`}\n            value={newRowData.GENDER}\n            onChange={(e) => setNewRowData({ ...newRowData, GENDER: e.target.value })}\n          >\n            {getFieldOptions(\"GENDER\").map((opt) => (\n              <option key={opt.value} value={opt.value}>\n                {opt.label}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">전화번호</label>\n          <input\n            type=\"text\"\n            className={`form-control ${styles.formControl}`}\n            placeholder=\"전화번호 입력 (예: 010-1234-5678)\"\n            value={newRowData.PHONE}\n            onChange={(e) => setNewRowData({ ...newRowData, PHONE: e.target.value })}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">예약 날짜</label>\n          <input\n            type=\"date\"\n            className={`form-control ${styles.formControl}`}\n            value={newRowData.RESERVATION_DATE}\n            onChange={(e) => setNewRowData({ ...newRowData, RESERVATION_DATE: e.target.value })}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">기간(개월)</label>\n          <select\n            className={`form-select ${styles.formSelect}`}\n            value={newRowData.DURATION}\n            onChange={(e) => setNewRowData({ ...newRowData, DURATION: parseInt(e.target.value) })}\n          >\n            {getFieldOptions(\"DURATION\").map((opt) => (\n              <option key={opt.value} value={opt.value}>\n                {opt.label}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">상태</label>\n          <select\n            className={`form-select ${styles.formSelect}`}\n            value={newRowData.STATUS}\n            onChange={(e) => setNewRowData({ ...newRowData, STATUS: e.target.value })}\n          >\n            {getFieldOptions(\"STATUS\").map((opt) => (\n              <option key={opt.value} value={opt.value}>\n                {opt.label}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">직원 번호</label>\n          <input\n            type=\"text\"\n            className={`form-control ${styles.formControl}`}\n            placeholder=\"직원 번호 입력\"\n            value={newRowData.EMP_NO}\n            onChange={(e) => setNewRowData({ ...newRowData, EMP_NO: e.target.value })}\n          />\n        </div>\n      </CommonPopup>\n    </div>\n  );\n};\n\nexport default ReservationManage;\n"],"names":["getFieldOptions","fieldId","fetchFieldOptions","endpoint","user","params","response","fetchData","api","item","err","errorMsgPopup","searchConfig","filterTableFields","ReservationManage","useStore","navigate","useNavigate","tableRef","useRef","tableInstance","isInitialRender","filters","setFilters","useState","initialFilters","area","tableFilters","setTableFilters","data","setData","loading","setLoading","tableStatus","setTableStatus","showAddPopup","setShowAddPopup","newRowData","setNewRowData","rowCount","setRowCount","isSearched","setIsSearched","roomTypeOptions","setRoomTypeOptions","fn_CellButton","label","className","onClick","cell","button","fn_HandleCellEdit","field","rowId","newValue","prevData","row","updatedRow","handleDelete","rowData","table","r","useEffect","hasPermission","roomTypes","common","createTable","styles","stateField","div","checkbox","span","opt","el","handleSearch","responseData","_b","_a","filterSelect","filterText","handleDynamicEvent","eventType","handleAddClick","handleAddConfirm","newRow","handleAddCancel","handleSave","changedRows","promises","PGUBUN","error","errors","result","e","msgPopup","jsxs","jsx","MainSearch","TableSearch","handleDownloadExcel","CommonPopup"],"mappings":"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"}