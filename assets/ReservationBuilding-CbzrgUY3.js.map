{"version":3,"file":"ReservationBuilding-CbzrgUY3.js","sources":["../../src/pages/reservation/ReservationBuilding.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useStore from \"../../store/store\";\nimport { hasPermission } from \"../../utils/authUtils\";\nimport api from \"../../utils/api\";\nimport common from \"../../utils/common\";\nimport { errorMsgPopup } from \"../../utils/errorMsgPopup\";\nimport styles from \"../../components/table/TableSearch.module.css\";\n\n// 한글 주석: 호실 상태에 따른 색상 반환 함수\nconst getRoomColor = (availableCount, totalCount) => {\n  const ratio = totalCount > 0 ? availableCount / totalCount : 0;\n  if (ratio === 0) return \"#f28c82\"; // 공실 없음: 부드러운 레드\n  if (ratio === 1) return \"#a3bffa\"; // 모두 공실: 부드러운 파란 회색\n  return `linear-gradient(to right, #f28c82 ${(1 - ratio) * 100}%, #a3bffa ${ratio * 100}%)`; // 부드러운 그라디언트\n};\n\n// 한글 주석: 호실 유형별 색상 정의\nconst roomTypeStyles = {\n  \"1인실\": { color: \"#a3bffa\" }, // 부드러운 파란 회색\n  \"2인실\": { color: \"#f7b267\" }, // 부드러운 오렌지\n  \"4인실\": { color: \"#a3bffa\" }, // 부드러운 파란 회색\n  \"8인실\": { color: \"#f28c82\" }, // 부드러운 레드\n};\n\n// 한글 주석: 배경에 따른 텍스트 색상 반환 함수\nconst getTextColor = (backgroundColor) => {\n  const isDarkBackground = backgroundColor.includes(\"#f28c82\") && backgroundColor.indexOf(\"#a3bffa\") < 0;\n  return isDarkBackground ? \"#fff\" : \"#1e293b\"; // 빨간색 배경: 흰색, 파란색 배경: 어두운 회색\n};\n\nconst ReservationBuilding = () => {\n  const { user } = useStore();\n  const navigate = useNavigate();\n  const [floors, setFloors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [reservationData, setReservationData] = useState([]);\n  const [layoutData, setLayoutData] = useState([]);\n\n  // 한글 주석: 권한 체크\n  useEffect(() => {\n    if (!user || !hasPermission(user.auth, \"reservationView\")) {\n      console.log(\"사용자 또는 예약 조회 권한이 없어 리다이렉트합니다.\");\n      navigate(\"/\");\n    }\n  }, [user, navigate]);\n\n  // 한글 주석: 층 및 레이아웃 데이터 로드\n  const loadFloors = async () => {\n    setLoading(true);\n    try {\n      const response = await api.post(common.getServerUrl(\"reservation/layout/list\"), {\n        FLOOR_ID: \"\",\n        SECTION: \"\",\n        DEBUG: \"F\",\n      });\n      if (response.data.success && Array.isArray(response.data.data)) {\n        setLayoutData(response.data.data);\n        const floorList = [...new Set(response.data.data.map((item) => item.FLOOR_ID))].sort((a, b) => {\n          const numA = parseInt(a.replace(\"F\", \"\"));\n          const numB = parseInt(b.replace(\"F\", \"\"));\n          return numB - numA; // 한글 주석: 내림차순 정렬 (3F, 2F, 1F)\n        });\n        setFloors(floorList);\n      } else {\n        errorMsgPopup(response.data.errMsg || \"층 데이터를 가져오는 중 오류가 발생했습니다.\");\n      }\n    } catch (error) {\n      console.error(\"층 데이터 로드 실패:\", error);\n      errorMsgPopup(\"층 데이터를 가져오는 중 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 한글 주석: 예약 데이터 로드\n  const loadReservationData = async () => {\n    try {\n      const params = {\n        p_NAME: \"\",\n        p_STATUS: \"\",\n        p_FLOOR_ID: \"\",\n        p_SECTION: \"\",\n        p_DEBUG: \"F\",\n      };\n      const response = await api.post(common.getServerUrl(\"reservation/reservation/list\"), params);\n      if (response.data.success && Array.isArray(response.data.data)) {\n        setReservationData(\n          response.data.data.map((row) => ({\n            ROOM_ID: row.ROOM_ID,\n            FLOOR_ID: row.FLOOR_ID,\n            SECTION: row.SECTION,\n            STATUS: row.STATUS === \"승인완료\" ? \"사용 중\" : row.STATUS,\n          }))\n        );\n      } else {\n        errorMsgPopup(response.data.errMsg || \"예약 데이터를 가져오는 중 오류가 발생했습니다.\");\n        setReservationData([]);\n      }\n    } catch (error) {\n      console.error(\"예약 데이터 로드 실패:\", error);\n      errorMsgPopup(\"예약 데이터를 가져오는 중 오류가 발생했습니다.\");\n      setReservationData([]);\n    }\n  };\n\n  // 한글 주석: 초기 데이터 로드\n  useEffect(() => {\n    loadFloors();\n    loadReservationData();\n  }, []);\n\n  // 한글 주석: 층 클릭 시 ReservationMain으로 이동\n  const handleFloorClick = (floor) => {\n    sessionStorage.setItem(\"selectedFloorId\", floor);\n    const targetPath = \"/reservation/ReservationMain\";\n    console.log(\"이동 경로:\", targetPath, \"선택된 층:\", floor);\n    navigate(targetPath, { replace: true });\n  };\n\n  // 한글 주석: 호실 유형 분포 계산 (총 개수 및 공실 개수)\n  const getRoomTypeDistribution = (sectionRooms) => {\n    const distribution = {\n      \"1인실\": { total: 0, available: 0 },\n      \"2인실\": { total: 0, available: 0 },\n      \"4인실\": { total: 0, available: 0 },\n      \"8인실\": { total: 0, available: 0 },\n    };\n    sectionRooms.forEach((room) => {\n      if (room && room.ROOM_TYPE) {\n        const roomType = room.ROOM_TYPE;\n        distribution[roomType].total += 1;\n        const isAvailable = !reservationData.some((res) => res.ROOM_ID === room.ROOM_ID && res.STATUS === \"사용 중\");\n        if (isAvailable) distribution[roomType].available += 1;\n      }\n    });\n    return distribution;\n  };\n\n  // 한글 주석: 층/섹션별 공실 요약 계산\n  const floorSummaries = useMemo(() => {\n    return floors.reduce((acc, floor) => {\n      const floorLayout = layoutData.filter((item) => item.FLOOR_ID === floor);\n      const totalRooms = floorLayout.length;\n      const usedRooms = reservationData.filter((res) => res.FLOOR_ID === floor && res.STATUS === \"사용 중\").length;\n      const availableRooms = totalRooms - usedRooms;\n      const sections = [\"A\", \"B\", \"C\"].reduce((sectionAcc, section) => {\n        const sectionLayout = floorLayout.filter((item) => item.SECTION === section);\n        const totalSectionRooms = sectionLayout.length;\n        const usedSectionRooms = reservationData.filter(\n          (res) => res.FLOOR_ID === floor && res.SECTION === section && res.STATUS === \"사용 중\"\n        ).length;\n        const availableSectionRooms = totalSectionRooms - usedSectionRooms;\n        const roomTypes = getRoomTypeDistribution(sectionLayout);\n        return {\n          ...sectionAcc,\n          [section]: { totalSectionRooms, availableSectionRooms, roomTypes },\n        };\n      }, {});\n      return { ...acc, [floor]: { totalRooms, availableRooms, sections } };\n    }, {});\n  }, [floors, layoutData, reservationData]);\n\n  if (loading) {\n    return <div style={{ color: \"#d4af37\", textAlign: \"center\", padding: \"2rem\" }}>로딩 중...</div>;\n  }\n\n  return (\n    <div\n      className={styles.container}\n      style={{\n        padding: \"2rem\",\n        minHeight: \"100vh\",\n        background: \"linear-gradient(135deg, #0f172a 0%, #0e141f 100%)\",\n        fontFamily: \"'Noto Sans KR', sans-serif\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        width: \"100vw\",\n        margin: 0,\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          maxWidth: \"1920px\",\n          height: \"calc(100vh - 4rem)\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"flex-start\",\n        }}\n      >\n        {/* 한글 주석: 좌측 빌딩 구조 (변경 없음, 층 역순 정렬 적용) */}\n        <div\n          style={{\n            flex: \"0 0 50%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n            padding: \"0 2rem\",\n            width: \"50%\",\n            overflow: \"hidden\",\n          }}\n        >\n          <h2 style={{ color: \"#d4af37\", fontSize: \"2rem\", marginBottom: \"2rem\", textShadow: \"1px 1px 3px rgba(0,0,0,0.3)\" }}>\n            두바이 63 빌딩\n          </h2>\n          <div\n            style={{\n              flex: \"1\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              gap: \"1rem\",\n              width: \"100%\",\n              maxHeight: \"calc(100vh - 150px)\",\n              overflowY: \"auto\",\n              paddingRight: \"0.5rem\",\n              scrollbarWidth: \"thin\",\n              scrollbarColor: \"#4a5568 #2d3748\",\n            }}\n            className=\"custom-scrollbar\"\n          >\n            <style>\n              {`.custom-scrollbar::-webkit-scrollbar {\n                width: 8px;\n              }\n              .custom-scrollbar::-webkit-scrollbar-track {\n                background: #2d3748;\n                border-radius: 4px;\n              }\n              .custom-scrollbar::-webkit-scrollbar-thumb {\n                background: #4a5568;\n                border-radius: 4px;\n              }\n              .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n                background: #718096;\n              }\n              .building-layer {\n                position: relative;\n                width: 100%;\n                max-width: 600px;\n                height: 250px;\n                background: linear-gradient(135deg, #4a5568 0%, #2d3748 70%, rgba(255,255,255,0.1) 100%);\n                border: 2px solid #d4af37;\n                border-radius: 12px;\n                box-shadow: 0 6px 12px rgba(0,0,0,0.3), inset 0 0 10px rgba(255,255,255,0.1);\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                color: #fff;\n                font-size: 1.8rem;\n                font-weight: 600;\n                cursor: pointer;\n                transition: transform 0.3s ease, box-shadow 0.3s ease;\n              }\n              .building-layer:hover {\n                transform: translateY(-4px);\n                box-shadow: 0 10px 20px rgba(0,0,0,0.4), inset 0 0 15px rgba(255,255,255,0.2);\n              }\n              .top-layer, .bottom-layer {\n                height: 280px;\n                background: linear-gradient(135deg, #a3bffa 0%, #718096 70%, rgba(255,255,255,0.1) 100%);\n              }`}\n            </style>\n            <div className=\"building-layer top-layer\" style={{ border: \"2px solid #d4af37\" }}>\n              옥상\n            </div>\n            {floors.map((floor) => (\n              <div\n                key={floor}\n                className=\"building-layer\"\n                onClick={() => handleFloorClick(floor)}\n                onMouseEnter={(e) => {\n                  e.target.style.transform = \"translateY(-4px)\";\n                  e.target.style.boxShadow = \"0 10px 20px rgba(0,0,0,0.4), inset 0 0 15px rgba(255,255,255,0.2)\";\n                }}\n                onMouseLeave={(e) => {\n                  e.target.style.transform = \"translateY(0)\";\n                  e.target.style.boxShadow = \"0 6px 12px rgba(0,0,0,0.3), inset 0 0 10px rgba(255,255,255,0.1)\";\n                }}\n              >\n                {floor}\n              </div>\n            ))}\n            <div className=\"building-layer bottom-layer\" style={{ border: \"2px solid #d4af37\" }}>\n              입구/주차장\n            </div>\n          </div>\n        </div>\n\n        {/* 한글 주석: 우측 공실 현황 (범례를 제목 옆으로, 셀에 경계선 추가) */}\n        <div\n          style={{\n            flex: \"0 0 50%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n            padding: \"0 2rem\",\n            width: \"50%\",\n            overflow: \"hidden\",\n          }}\n        >\n          <h2 style={{ color: \"#d4af37\", fontSize: \"1.8rem\", marginBottom: \"1rem\", textShadow: \"1px 1px 3px rgba(0,0,0,0.2)\" }}>\n            <div style={{ display: \"flex\", alignItems: \"center\", gap: \"1rem\" }}>\n              공실 현황\n              <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n                <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.3rem\" }}>\n                  <span style={{ width: \"12px\", height: \"12px\", background: \"#a3bffa\", borderRadius: \"2px\" }}></span>\n                  <span style={{ color: \"#fff\", fontSize: \"0.8rem\" }}>예약 가능</span>\n                </div>\n                <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.3rem\" }}>\n                  <span style={{ width: \"12px\", height: \"12px\", background: \"#f28c82\", borderRadius: \"2px\" }}></span>\n                  <span style={{ color: \"#fff\", fontSize: \"0.8rem\" }}>사용 중</span>\n                </div>\n              </div>\n            </div>\n          </h2>\n          <div\n            style={{\n              flex: \"1\",\n              width: \"100%\",\n              maxWidth: \"650px\",\n              overflowY: \"auto\",\n              maxHeight: \"calc(100vh - 7rem)\",\n              padding: \"0 0 1rem\",\n              paddingRight: \"0.5rem\",\n              scrollbarWidth: \"thin\",\n              scrollbarColor: \"#4a5568 #2d3748\",\n            }}\n            className=\"custom-scrollbar\"\n          >\n            <style>\n              {`\n                .custom-scrollbar::-webkit-scrollbar {\n                  width: 8px;\n                  height: 8px;\n                }\n                .custom-scrollbar::-webkit-scrollbar-track {\n                  background: #2d3748;\n                  border-radius: 4px;\n                }\n                .custom-scrollbar::-webkit-scrollbar-thumb {\n                  background: #4a5568;\n                  border-radius: 4px;\n                }\n                .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n                  background: #718096;\n                }\n                .tooltip {\n                  position: absolute;\n                  background: rgba(31,41,55,0.9);\n                  color: #fff;\n                  padding: 0.6rem 0.8rem;\n                  border-radius: 6px;\n                  border: 1px solid #4a5568;\n                  font-size: 0.85rem;\n                  z-index: 10;\n                  display: none;\n                  white-space: nowrap;\n                  box-shadow: 0 4px 12px rgba(0,0,0,0.4);\n                }\n                td:hover .tooltip {\n                  display: block;\n                  top: calc(100% + 5px);\n                  left: 50%;\n                  transform: translateX(-50%);\n                }\n                .room-type-row {\n                  display: flex;\n                  align-items: center;\n                  gap: 0.4rem;\n                  margin: 0.2rem 0;\n                }\n              `}\n            </style>\n            {floors.length === 0 && (\n              <div style={{ color: \"#d4af37\", textAlign: \"center\", padding: \"1rem\", fontSize: \"1rem\" }}>데이터가 없습니다.</div>\n            )}\n            <table\n              style={{\n                width: \"100%\",\n                borderCollapse: \"separate\",\n                borderSpacing: \"0\",\n                backgroundColor: \"rgba(255,255,255,0.03)\",\n                borderRadius: \"12px\",\n                overflow: \"hidden\",\n                boxShadow: \"0 4px 16px rgba(0,0,0,0.3)\",\n              }}\n            >\n              <thead>\n                <tr style={{ backgroundColor: \"#2d3748\", color: \"#d4af37\" }}>\n                  <th style={{ padding: \"1rem\", textAlign: \"left\", fontSize: \"1rem\", border: \"1px solid #4a5568\" }}>층</th>\n                  <th style={{ padding: \"1rem\", textAlign: \"center\", fontSize: \"1rem\", border: \"1px solid #4a5568\" }}>A 섹션</th>\n                  <th style={{ padding: \"1rem\", textAlign: \"center\", fontSize: \"1rem\", border: \"1px solid #4a5568\" }}>B 섹션</th>\n                  <th style={{ padding: \"1rem\", textAlign: \"center\", fontSize: \"1rem\", border: \"1px solid #4a5568\" }}>C 섹션</th>\n                </tr>\n              </thead>\n              <tbody>\n                {floors.map((floor) => {\n                  const { sections } = floorSummaries[floor];\n                  return (\n                    <tr key={floor}>\n                      <td style={{ padding: \"1rem\", color: \"#fff\", fontSize: \"0.95rem\", fontWeight: \"500\", border: \"1px solid #4a5568\" }}>\n                        {floor}\n                      </td>\n                      {[\"A\", \"B\", \"C\"].map((section) => {\n                        const { totalSectionRooms, availableSectionRooms, roomTypes } = sections[section];\n                        const roomTypeText = Object.entries(roomTypes)\n                          .filter(([_, { total }]) => total > 0)\n                          .map(([type]) => (\n                            <div key={type} className=\"room-type-row\" style={{ color: roomTypeStyles[type].color }}>\n                              <span style={{ fontSize: \"0.95rem\" }}>{type}: 예약 가능</span>\n                            </div>\n                          ));\n                        const roomTypeSummary = Object.entries(roomTypes)\n                          .filter(([_, { total }]) => total > 0)\n                          .map(([type, { available, total }]) => {\n                            const status = available === 0 ? \"사용 중\" : \"예약 가능\";\n                            const textColor = getTextColor(getRoomColor(availableSectionRooms, totalSectionRooms));\n                            return (\n                              <div\n                                key={type}\n                                className=\"room-type-row\"\n                                style={{ color: textColor, textShadow: \"0 1px 2px rgba(0,0,0,0.5)\", fontWeight: 500, lineHeight: \"1.2\" }}\n                              >\n                                <span style={{ fontSize: \"0.95rem\" }}>\n                                  {type}: {status}\n                                </span>\n                              </div>\n                            );\n                          });\n                        return (\n                          <td\n                            key={`${floor}-${section}`}\n                            style={{\n                              padding: \"1rem\",\n                              textAlign: \"center\",\n                              background: getRoomColor(availableSectionRooms, totalSectionRooms),\n                              position: \"relative\",\n                              verticalAlign: \"middle\",\n                              border: \"1px solid #4a5568\",\n                            }}\n                          >\n                            <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"0.4rem\" }}>\n                              {roomTypeSummary.length > 0 ? (\n                                roomTypeSummary\n                              ) : (\n                                <span style={{ color: \"#d4af37\", fontSize: \"0.85rem\", textShadow: \"0 1px 2px rgba(0,0,0,0.5)\" }}>\n                                  호실 없음\n                                </span>\n                              )}\n                            </div>\n                            <div className=\"tooltip\">{roomTypeText.length > 0 ? roomTypeText : \"호실 없음\"}</div>\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReservationBuilding;\n"],"names":["getRoomColor","availableCount","totalCount","ratio","roomTypeStyles","getTextColor","backgroundColor","ReservationBuilding","user","useStore","navigate","useNavigate","floors","setFloors","useState","loading","setLoading","reservationData","setReservationData","layoutData","setLayoutData","useEffect","hasPermission","loadFloors","response","api","common","floorList","item","b","numA","errorMsgPopup","error","loadReservationData","params","row","handleFloorClick","floor","targetPath","getRoomTypeDistribution","sectionRooms","distribution","room","roomType","res","floorSummaries","useMemo","acc","floorLayout","totalRooms","usedRooms","availableRooms","sections","sectionAcc","section","sectionLayout","totalSectionRooms","usedSectionRooms","availableSectionRooms","roomTypes","jsx","styles","jsxs","e","roomTypeText","_","total","type","roomTypeSummary","available","status","textColor"],"mappings":"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"}